# WARNING: Do not deploy this tutorial configuration directly to a production environment
#
# The tutorial docker-compose files have not been written for production deployment and will not
# scale. A proper architecture has been sacrificed to keep the narrative focused on the learning
# goals, they are just used to deploy everything onto a single Docker machine. All FIWARE components
# are running at full debug and extra ports have been exposed to allow for direct calls to services.
# They also contain various obvious security flaws - passwords in plain text, no load balancing,
# no use of HTTPS and so on.
#
# This is all to avoid the need of multiple machines, generating certificates, encrypting secrets
# and so on, purely so that a single docker-compose file can be read as an example to build on,
# not use directly.
#
# When deploying to a production environment, please refer to the Helm Repository
# for FIWARE Components in order to scale up to a proper architecture:
#
# see: https://github.com/FIWARE/helm-charts/
#
version: "3.5"
services:
  # Draco is configured to write context data to Mongo-DB
  draco:
    image: ging/fiware-draco:${DRACO_VERSION}
    hostname: draco
    #build: ./draco
    container_name: fiware-draco
    networks:
      - default
    environment:
      - NIFI_WEB_HTTP_PORT=${DRACO_API_PORT}
    expose:
      - "5050"
      - "${DRACO_API_PORT}"
    ports:
      - "${DRACO_API_PORT}:${DRACO_API_PORT}" # localhost:9090
      - "5050:5050"
    volumes:
      - ./draco/config:/config
      - ./draco/nifi_volume/conf:/opt/nifi/nifi-current/conf
    healthcheck:
      test: curl --fail -s http://draco:${DRACO_API_PORT}/nifi-api/system-diagnostics || exit 1
      start_period: 1m

networks:
  default_net:
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  mongo-db-orion: ~
  mongo-db-web:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:

